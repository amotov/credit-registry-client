
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.bsbnb</groupId>
    <artifactId>credit-registry-client</artifactId>
    <version>1.0.0</version>
    <packaging>jar</packaging>

    <name>credit-registry-client</name>
    <url>http://maven.apache.org</url>
    
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <jdk.version>1.6</jdk.version>
        <swt.version>3.7.2</swt.version>
        <main.class>com.bsbnb.creditregistry.client.CreditRegistryClient</main.class>
        <lib.directory>lib</lib.directory>
        <exeFileName>CreditRegistryClient</exeFileName>
        <product.company>BSBNB</product.company>
        <product.title>CreditRegistryClient</product.title>
    </properties>

    <dependencies>
        <dependency>
            <groupId>org.eclipse.swt</groupId>
            <artifactId>${swt.artifactId}</artifactId>
            <version>${swt.version}</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.6.4</version>
        </dependency>

        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
            <version>1.6.4</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.10</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>1.4</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <version>1.2.16</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.googlecode.juniversalchardet</groupId>
            <artifactId>juniversalchardet</artifactId>
            <version>1.0.3</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>org.apache.tika</groupId>
            <artifactId>tika-core</artifactId>
            <version>1.1</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.6</version>
        </dependency>
        <dependency>
            <groupId>org.eclipse</groupId>
            <artifactId>jface</artifactId>
            <version>3.3.0-I20070606-0010</version>
            <type>jar</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <compilerVersion>${jdk.version}</compilerVersion>
                    <source>${jdk.version}</source>
                    <target>${jdk.version}</target>
                    <encoding>UTF-8</encoding>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
			<!-- The jar plugin will put the main class and libraries into manifest. -->
			<!-- This way you can run your app using double-click on your jar file. -->
			<!-- Or using java -jar your_jar_file_name.jar -->
			<!-- There's SWT-Version beiing passed in manifest from maven to MultiPlatformSwtHelper. -->
			<!-- It is used in runtime to construct the filename of the correct jar. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.3.2</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>${main.class}</mainClass>
                            <classpathPrefix>${lib.directory}/</classpathPrefix>
                        </manifest>
                        <manifestEntries>
                            <SWT-Version>${swt.version}</SWT-Version>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>
			<!-- We copy all the swt jars using dependency plugin into a directory -->
			<!-- from where the assembly plugin will pick them for the final package. -->
			<!-- The dependency plugin utilize maven's dependency resolution mechanism -->
			<!-- and maven's repositories. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.3</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
							<!-- <stripVersion>true</stripVersion> -->
                            <outputDirectory>${project.build.directory}/${lib.directory}</outputDirectory>
                            <overWriteIfNewer>true</overWriteIfNewer>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.eclipse.swt</groupId>
                                    <artifactId>org.eclipse.swt.cocoa.macosx</artifactId>
                                    <version>${swt.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.eclipse.swt</groupId>
                                    <artifactId>org.eclipse.swt.cocoa.macosx.x86_64</artifactId>
                                    <version>${swt.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.eclipse.swt</groupId>
                                    <artifactId>org.eclipse.swt.gtk.linux.x86</artifactId>
                                    <version>${swt.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.eclipse.swt</groupId>
                                    <artifactId>org.eclipse.swt.gtk.linux.x86_64</artifactId>
                                    <version>${swt.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.eclipse.swt</groupId>
                                    <artifactId>org.eclipse.swt.win32.win32.x86</artifactId>
                                    <version>${swt.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.eclipse.swt</groupId>
                                    <artifactId>org.eclipse.swt.win32.win32.x86_64</artifactId>
                                    <version>${swt.version}</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>com.googlecode.juniversalchardet</groupId>
                                    <artifactId>juniversalchardet</artifactId>
                                    <version>1.0.3</version>
                                    <type>jar</type>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.apache.tika</groupId>
                                    <artifactId>tika-core</artifactId>
                                    <version>1.1</version>
                                    <type>jar</type>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>commons-lang</groupId>
                                    <artifactId>commons-lang</artifactId>
                                    <version>2.6</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.slf4j</groupId>
                                    <artifactId>slf4j-api</artifactId>
                                    <version>1.6.4</version>
                                </artifactItem>

                                <artifactItem>
                                    <groupId>org.slf4j</groupId>
                                    <artifactId>slf4j-simple</artifactId>
                                    <version>1.6.4</version>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>commons-io</groupId>
                                    <artifactId>commons-io</artifactId>
                                    <version>1.4</version>
                                    <type>jar</type>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>log4j</groupId>
                                    <artifactId>log4j</artifactId>
                                    <version>1.2.16</version>
                                    <type>jar</type>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
			<!-- Assembly plugin builds the final zip package. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.2.1</version>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>${main.class}</mainClass>
                            <addClasspath>true</addClasspath>
                        </manifest>
                    </archive>
                    <descriptors>
                        <descriptor>src/main/assembly/multiplatform.xml</descriptor>
                    </descriptors>
                </configuration>
                <executions>
                    <execution>
                        <id>make-assembly</id>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
			<!-- Testing multiplatform swt jar has to be done after packaging. -->
			<!-- Hence they run in verify phase using failsafe plugin. You don't -->
			<!-- need to copy this to your porject. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.10</version>
                <configuration>
                    <workingDirectory>${project.build.directory}</workingDirectory>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.build.directory}/${project.build.finalName}.jar</additionalClasspathElement>
                    </additionalClasspathElements>
                    <classpathDependencyExcludes>
                        <classpathDependencyExclude>org.eclipse.swt:*</classpathDependencyExclude>
                    </classpathDependencyExcludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.akathist.maven.plugins.launch4j</groupId>
                <artifactId>launch4j-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>l4j-clui</id>
                        <phase>package</phase>
                        <goals>
                            <goal>launch4j</goal>
                        </goals>
                        <configuration>
                            <headerType>gui</headerType>
                            <outfile>target/${exeFileName}.exe</outfile>
                            <jar>target/${project.artifactId}-${project.version}.jar</jar>
                            <errTitle>${product.title}</errTitle>
                            <icon>icon.ico</icon>
                            <classPath>
                                <mainClass>${main.class}</mainClass>
                                <addDependencies>true</addDependencies>
                                <preCp>anything</preCp>
                            </classPath>
                            <jre>
                                <minVersion>${jdk.version}.0</minVersion>
                            </jre>
                            <versionInfo>
                                <fileVersion>${project.version}.0</fileVersion>
                                <txtFileVersion>${project.version}</txtFileVersion>
                                <fileDescription>Client for Credit Registry</fileDescription>
                                <copyright>Copyright © 2012 ${product.company}</copyright>
                                <productVersion>${project.version}.0</productVersion>
                                <txtProductVersion>${project.version}</txtProductVersion>
                                <companyName>${product.company}</companyName>
                                <productName>${product.title}</productName>
                                <internalName>${exeFileName}</internalName>
                                <originalFilename>${exeFileName}.exe</originalFilename>
                            </versionInfo>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>



	<!-- The profiles are used to select correct swt artifact at compile -->
	<!-- (and development) time. We will have all of them at the runtime. -->
	<!-- That's the goal of this project ;-) You can manually force -->
	<!-- different profile by maven's cmd line argument -P -->
    <profiles>
        <profile>
            <id>linux32</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>i386</arch>
                </os>
            </activation>
            <properties>
                <swt.artifactId>org.eclipse.swt.gtk.linux.x86</swt.artifactId>
            </properties>
        </profile>
        <profile>
            <id>linux64</id>
            <activation>
                <os>
                    <family>linux</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <swt.artifactId>org.eclipse.swt.gtk.linux.x86_64</swt.artifactId>
            </properties>
        </profile>
        <profile>
            <id>macosx32</id>
            <activation>
                <os>
                    <family>macosx</family>
                    <arch>i386</arch>
                </os>
            </activation>
            <properties>
                <swt.artifactId>org.eclipse.swt.cocoa.macosx</swt.artifactId>
            </properties>
        </profile>
        <profile>
            <id>macosx64</id>
            <activation>
                <os>
                    <family>macosx</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <swt.artifactId>org.eclipse.swt.cocoa.macosx.x86_64</swt.artifactId>
            </properties>
        </profile>
        <profile>
            <id>win32</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>i386</arch>
                </os>
            </activation>
            <properties>
                <swt.artifactId>org.eclipse.swt.win32.win32.x86</swt.artifactId>
            </properties>
        </profile>
        <profile>
            <id>win64</id>
            <activation>
                <os>
                    <family>windows</family>
                    <arch>amd64</arch>
                </os>
            </activation>
            <properties>
                <swt.artifactId>org.eclipse.swt.win32.win32.x86_64</swt.artifactId>
            </properties>
        </profile>
    </profiles>

	<!-- There's no official public maven eclipse repository yet. There's 3.6.2 -->
	<!-- build in this testing repo. Otherwise use maven install to install -->
	<!-- your version of swt into your local repo. -->
    <!--<repositories>
        <repository>
            <id>swt</id>
            <url>http://maven.eclipse.org/nexus/content/repositories/testing/</url>
        </repository>
    </repositories>-->
</project>
